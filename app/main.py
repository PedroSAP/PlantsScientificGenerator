# PLANTSSCIENTIFICGENERATOR

# GOAL:
# Create an API where the user sends a sentence containing a plant's common name,
# and receives back its scientific name, generated by a public LLM.

# REQUIREMENTS (to be added in requirements.txt):
# fastapi
# uvicorn
# transformers
# torch

from fastapi import FastAPI
from pydantic import BaseModel
from transformers import pipeline

# 1. Initialize FastAPI app
app = FastAPI(title="PlantsScientificGenerator")

# 2. Load a public LLM from Hugging Face
llm = pipeline("text2text-generation", model="google/flan-t5-xl", tokenizer="google/flan-t5-xl")

# 3. Request model
class PlantSentenceRequest(BaseModel):
    user_sentence: str

# 4. Function to retrieve the scientific name from a common name
def get_scientific_name(common_name):
    prompt = (
        f"What is the scientific (Latin) name of the plant known commonly as '{common_name}'? "
        "Respond with only the binomial name, like 'Genus species'. If unknown, say 'Unknown'."
    )
    response = llm(prompt, max_new_tokens=20, do_sample=False, truncation=True)[0]['generated_text']
    return response.strip()

# 5. Main endpoint
@app.post("/scientific-name")
async def generate_scientific_name_from_sentence(plant: PlantSentenceRequest):
    scientific_name = get_scientific_name(plant.user_sentence)
    return {
        "original_input": plant.user_sentence,
        "scientific_name": scientific_name
    }
